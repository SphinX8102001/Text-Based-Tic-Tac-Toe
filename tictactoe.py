# -*- coding: utf-8 -*-
"""TicTacToe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AK51YW85bul7r2N2Yg0j_vlvQNQrAddz
"""

import random
import os
from colorama import Fore,Style
import time
import sys
class Tic_Tac_Toe:
    def __init__(self):
        print("tic-tac-toe")
        duck = r'''
    _
  _(o)>
 \ (.)
  `--'
'''
        print(duck)
        self.player_one=input('Player one name: ')
        self.player_two=input('Player two name: ')

        print(f"0|1|2")
        print(f"-----")
        print(f"3|4|5")
        print(f"-----")
        print(f"6|7|8")


        self.Turns=[self.player_one,self.player_two]


        self.zero='0'
        self.one='1'
        self.two='2'
        self.three='3'
        self.four='4'
        self.five='5'
        self.six='6'
        self.seven='7'
        self.eight='8'

        self.move=None
        self.turn=None
        self.total_turns= 1
        self.isEnd=False
        self.isDraw=False
        self.winner=None
        self.player=random.choice(self.Turns)
        self.x_player = self.player

        self.y_player = None
        for i in self.Turns:
            if i !=self.x_player:
                self.y_player=i
    def print_board(self,move,turn): #move == digit turn== string
        self.turn = turn
        self.move=move
        if turn == 'X':
            if self.move == '0':
                self.zero = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '1':
                self.one = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '2':
                self.two = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '3':
                self.three = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '4':
                self.four = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '5':
                self.five = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '6':
                self.six = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '7':
                self.seven = Fore.GREEN+'X'+Fore.RESET
            elif self.move == '8':
                self.eight = Fore.GREEN+'X'+Fore.RESET

        else:
            if self.move == '0':
                self.zero = Fore.RED+'O'+Fore.RESET
            elif self.move == '1':
                self.one = Fore.RED+'O'+Fore.RESET
            elif self.move == '2':
                self.two = Fore.RED+'O'+Fore.RESET
            elif self.move == '3':
                self.three = Fore.RED+'O'+Fore.RESET
            elif self.move == '4':
                self.four = Fore.RED+'O'+Fore.RESET
            elif self.move == '5':
                self.five = Fore.RED+'O'+Fore.RESET
            elif self.move == '6':
                self.six = Fore.RED+'O'+Fore.RESET
            elif self.move == '7':
                self.seven = Fore.RED+'O'+Fore.RESET
            elif self.move == '8':
                self.eight = Fore.RED+'O'+Fore.RESET


        print(f"{self.zero}|{self.one}|{self.two}")
        print(f"-----")
        print(f"{self.three}|{self.four}|{self.five}")
        print(f"-----")
        print(f"{self.six}|{self.seven}|{self.eight}")

    def WinCheck(self):
        if self.zero==self.one==self.two or self.three==self.four==self.five or self.six==self.seven==self.eight or self.zero==self.three==self.six or self.one==self.four==self.seven or self.two==self.five==self.eight or self.zero==self.four==self.eight or self.six==self.four==self.two:
            self.isEnd=True
            if self.turn == 'X':
                self.winner = self.x_player
            else:
                self.winner = self.y_player

        elif self.total_turns==9:
            self.isDraw=True
            self.isEnd=True

        if self.isEnd==self.isDraw==True:
                print('Draw!!')
                return True
        elif self.isEnd == True and self.isDraw==False:
                print(f"{self.winner} is the winner!")
                return True
    def isWrongMove(self,move):
        iswrongmove=False
        self.move=move
        if self.zero != '0' and move=='0':
            iswrongmove=True
        elif self.one != '1' and move=='1':
            iswrongmove=True
        elif self.two != '2' and move=='2':
            iswrongmove=True
        elif self.three != '3' and move=='3':
            iswrongmove=True
        elif self.four != '4' and move=='4':
            iswrongmove=True
        elif self.five != '5' and move=='5':
            iswrongmove=True
        elif self.six != '6' and move=='6':
            iswrongmove=True
        elif self.seven != '7' and move=='7':
            iswrongmove=True
        elif self.eight != '8' and move=='8':
            iswrongmove=True
        elif move.isdigit() == False:
            iswrongmove=True
        elif int(move)<0 or int(move)>8:
            iswrongmove=True

        return iswrongmove
def TicTacToe():
    obj=Tic_Tac_Toe()
    turn = 'X'
    x_player = obj.x_player
    y_player = obj.y_player
    loop = True
    try:
        while loop:

            if turn == 'X':
                move = input(f"{x_player}'s Move : ")
                check = obj.isWrongMove(move)
                while check:
                    print('Invalid input!')
                    move = input(f"{x_player}'s Move : ")
                    check = obj.isWrongMove(move)
                os.system('cls')
                obj.print_board(move,turn)
                result = obj.WinCheck()
                if result==True:
                    return
                turn = 'Y'
                obj.total_turns+=1
                obj.player = y_player
            else:
                move = input(f"{y_player}'s Move : ")
                check = obj.isWrongMove(move)
                while check:
                    print('Invalid input!')
                    move = input(f"{y_player}'s Move : ")
                    check = obj.isWrongMove(move)
                os.system('cls')
                obj.print_board(move,turn)
                result = obj.WinCheck()
                if result==True:
                    return
                        # loop = False
                        # break
                turn = 'X'
                obj.total_turns+=1
                obj.player = x_player
    except Exception as e:
            print(f"Error: {e}")

def PlayTicTacToe():
    x='y'
    loop=True
    while loop:
        if x=='y':

            TicTacToe()
            x=input('Play again? y/n :')
            os.system('cls')
        else:
            input('press enter to go to the main menu')
            loop=False

if __name__ == "__main__":
    PlayTicTacToe()
